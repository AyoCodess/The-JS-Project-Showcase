{"version":3,"sources":["your-countdown/your-countdown.js"],"names":["countdownActive","savedCountDown","inputContainer","document","getElementById","countdownForm","dateEL","countdownEl","countdownElTitle","countdownBtn","timeElements","querySelectorAll","completeEl","completeElinfo","completeBtn","countdownTitle","countdownDate","countdownValue","Date","second","minute","hour","day","today","toISOString","split","updateDOM","setInterval","now","getTime","distance","days","Math","floor","hours","minutes","seconds","hidden","clearInterval","textContent","updateCountdown","e","preventDefault","srcElement","value","title","date","localStorage","setItem","JSON","stringify","alert","reset","removeItem","restorePreviouscountdown","getItem","parse","addEventListener"],"mappings":";AAAA,aAEA,IAgBIA,EAGAC,EAnBEC,EAAiBC,SAASC,eAAhC,mBACMC,EAAgBF,SAASC,eAA/B,iBACME,EAASH,SAASC,eAAxB,eAEMG,EAAcJ,SAASC,eAA7B,aACMI,EAAmBL,SAASC,eAAlC,mBACMK,EAAeN,SAASC,eAA9B,oBACMM,EAAeP,SAASQ,iBAA9B,QAEMC,EAAaT,SAASC,eAA5B,YACMS,EAAiBV,SAASC,eAAhC,iBACMU,EAAcX,SAASC,eAA7B,mBAEIW,EAAJ,GACIC,EAAJ,GACIC,EAAiB,IAAIC,KAMnBC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAINE,GAAQ,IAAIL,MAAOM,cAAcC,MAAW,KAAA,GAIlD,SAASC,IACP1B,EAAkB2B,YAAY,WACtBC,IAAAA,GAAM,IAAIV,MAAOW,UAEjBC,EAAWb,EAAiBW,EAE5BG,EAAOC,KAAKC,MAAMH,EAAWR,GAC7BY,EAAQF,KAAKC,MAAOH,EAAWR,EAAOD,GACtCc,EAAUH,KAAKC,MAAOH,EAAWT,EAAQD,GACzCgB,EAAUJ,KAAKC,MAAOH,EAAWV,EAAUD,GAIjDjB,EAAemC,QAAS,EAIpBP,EAAW,GACbvB,EAAY8B,QAAS,EACrBC,cAActC,GACda,EAAe0B,YAAiBxB,GAAAA,OAAAA,EAA8BC,iBAAAA,OAAAA,GAC9DJ,EAAWyB,QAAS,IAGpB7B,EAAiB+B,YAAiBxB,GAAAA,OAAAA,GAElCL,EAAa,GAAG6B,YAAiBR,GAAAA,OAAAA,GACjCrB,EAAa,GAAG6B,YAAiBL,GAAAA,OAAAA,GACjCxB,EAAa,GAAG6B,YAAiBJ,GAAAA,OAAAA,GACjCzB,EAAa,GAAG6B,YAAiBH,GAAAA,OAAAA,GAEjCxB,EAAWyB,QAAS,EACpB9B,EAAY8B,QAAS,IAEtB,KAML,SAASG,EAAgBC,GACvBA,EAAEC,iBAEF3B,EAAiB0B,EAAEE,WAAW,GAAGC,MACjC5B,EAAgByB,EAAEE,WAAW,GAAGC,MAGhC3C,EAAiB,CACf4C,MAAO9B,EACP+B,KAAM9B,GAGR+B,aAAaC,QAAqBC,YAAAA,KAAKC,UAAUjD,IAIjD,KAAIe,EACFmC,MAAA,8CAIAlC,EAAiB,IAAIC,KAAKF,GAAea,UAEzCH,KAMJ,SAAS0B,IAEP7C,EAAY8B,QAAS,EACrBnC,EAAemC,QAAS,EACxBzB,EAAWyB,QAAS,EAIpBC,cAActC,GAIde,EAAA,GACAC,EAAA,GAEA+B,aAAaM,WAAb,aAGF,SAASC,IACHP,aAAaQ,QAAjB,eACErD,EAAemC,QAAS,EACxBpC,EAAiBgD,KAAKO,MAAMT,aAAaQ,QAAxB,cACjBxC,EAAiBd,EAAe4C,MAChC7B,EAAgBf,EAAe6C,KAC/B7B,EAAiB,IAAIC,KAAKF,GAAea,UACzCH,KAIJrB,EAAcoD,iBAA2BjB,SAAAA,GACzC/B,EAAagD,iBAA0BL,QAAAA,GAEvCtC,EAAY2C,iBAA0BL,QAAAA,GAItCE","file":"your-countdown.39b029e6.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nconst inputContainer = document.getElementById(`input-container`);\nconst countdownForm = document.getElementById(`countdownForm`);\nconst dateEL = document.getElementById(`date-picker`);\n\nconst countdownEl = document.getElementById(`countdown`);\nconst countdownElTitle = document.getElementById(`countdown-title`);\nconst countdownBtn = document.getElementById(`countdown-button`);\nconst timeElements = document.querySelectorAll(`span`);\n\nconst completeEl = document.getElementById(`complete`);\nconst completeElinfo = document.getElementById(`complete-info`);\nconst completeBtn = document.getElementById(`complete-button`);\n\nlet countdownTitle = ``;\nlet countdownDate = ``;\nlet countdownValue = new Date();\nlet countdownActive;\n\n//? local storage\nlet savedCountDown;\n\nconst second = 1000;\nconst minute = second * 60;\nconst hour = minute * 60;\nconst day = hour * 24;\n\n//? set dat input minimum with todays date\n\nconst today = new Date().toISOString().split(`T`)[0];\n\n//? populate countdown and complete UI\n\nfunction updateDOM() {\n  countdownActive = setInterval(() => {\n    const now = new Date().getTime();\n\n    const distance = countdownValue - now;\n\n    const days = Math.floor(distance / day);\n    const hours = Math.floor((distance % day) / hour);\n    const minutes = Math.floor((distance % hour) / minute);\n    const seconds = Math.floor((distance % minute) / second);\n\n    //? hide input\n\n    inputContainer.hidden = true;\n\n    //? if countdown has ended show compelete\n\n    if (distance < 0) {\n      countdownEl.hidden = true;\n      clearInterval(countdownActive);\n      completeElinfo.textContent = `${countdownTitle} finished on ${countdownDate}`;\n      completeEl.hidden = false;\n    } else {\n      //? show countdown in progress\n      countdownElTitle.textContent = `${countdownTitle}`;\n\n      timeElements[0].textContent = `${days}`;\n      timeElements[1].textContent = `${hours}`;\n      timeElements[2].textContent = `${minutes}`;\n      timeElements[3].textContent = `${seconds}`;\n\n      completeEl.hidden = true;\n      countdownEl.hidden = false;\n    }\n  }, 1000);\n}\n\n//? event listeners\n\n//? takes values from form input\nfunction updateCountdown(e) {\n  e.preventDefault();\n\n  countdownTitle = e.srcElement[0].value;\n  countdownDate = e.srcElement[1].value;\n\n  //? local storage\n  savedCountDown = {\n    title: countdownTitle,\n    date: countdownDate,\n  };\n\n  localStorage.setItem(`countdown`, JSON.stringify(savedCountDown));\n\n  //?  check for valid date\n\n  if (countdownDate === ``) {\n    alert(`Please select the date for the countdown.`);\n  } else {\n    //? get number version of current date\n\n    countdownValue = new Date(countdownDate).getTime();\n\n    updateDOM();\n  }\n}\n\n//? rest all values\n\nfunction reset() {\n  //? hide coutdown, show form\n  countdownEl.hidden = true;\n  inputContainer.hidden = false;\n  completeEl.hidden = true;\n\n  //? stop the coutdowm\n\n  clearInterval(countdownActive);\n\n  //? reset all values\n\n  countdownTitle = ``;\n  countdownDate = ``;\n\n  localStorage.removeItem(`countdown`);\n}\n\nfunction restorePreviouscountdown() {\n  if (localStorage.getItem(`countdown`)) {\n    inputContainer.hidden = true;\n    savedCountDown = JSON.parse(localStorage.getItem(`countdown`));\n    countdownTitle = savedCountDown.title;\n    countdownDate = savedCountDown.date;\n    countdownValue = new Date(countdownDate).getTime();\n    updateDOM();\n  }\n}\n\ncountdownForm.addEventListener(`submit`, updateCountdown);\ncountdownBtn.addEventListener(`click`, reset);\n\ncompleteBtn.addEventListener(`click`, reset);\n\n//? on load, check local storage\n\nrestorePreviouscountdown();\n"]}
{"version":3,"sources":["infinite-scroll-gallery/infinite-scroll-gallery-script.js"],"names":["apiKey","config","MY_API_TOKEN","imageContainer","document","getElementById","loader","photosArray","ready","imagesLoaded","totalImages","query","order_by","per_page","apiURL","imageLoader","console","log","hidden","setAttributes","element","attributes","nameOfAtr","setAttribute","displayPhotos","length","forEach","photo","item","createElement","href","urls","regular","target","img","src","alt","alt_description","title","addEventListener","append","getPhotos","fetch","response","json","data","results","alert","window","innerHeight","scrollY","body","offsetHeight"],"mappings":";AAwHS,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAtHT,IAAMA,EAASC,OAAOC,aAIhBC,EAAiBC,SAASC,eAAhC,mBACMC,EAASF,SAASC,eAAxB,UAEIE,EAAc,GACdC,GAAQ,EACRC,EAAe,EACfC,EAAc,EAIZC,EAAN,SACMC,EAAN,SACMC,EAAN,KAGMC,EAA8Dd,qDAAAA,OAAAA,EAAgBW,WAAAA,OAAAA,EAAkBE,cAAAA,OAAAA,EAAqBD,cAAAA,OAAAA,GAM3H,SAASG,IACPN,IACAO,QAAQC,IAAIR,GAERA,IAAiBC,IACnBF,GAAQ,EACRF,EAAOY,QAAS,EAChBF,QAAQC,IAAeT,UAAAA,IAM3B,SAASW,EAAcC,EAASC,GACzB,IAAA,IAAMC,KAAaD,EACtBD,EAAQG,aAAaD,EAAWD,EAAWC,IAQ/C,SAASE,IACPf,EAAe,EACfO,QAAQC,IAAoCR,+BAAAA,GAE5CC,EAAcH,EAAYkB,OAC1BT,QAAQC,IAAoBP,eAAAA,GAI5BH,EAAYmB,QAAQ,SAACC,GAGbC,IAAAA,EAAOxB,SAASyB,cAAtB,KAEAV,EAAcS,EAAM,CAClBE,KAAMH,EAAMI,KAAKC,QACjBC,OAAQ,WAKJC,IAAAA,EAAM9B,SAASyB,cAAc,OAEnCV,EAAce,EAAK,CACjBC,IAAKR,EAAMI,KAAKC,QAChBI,IAAKT,EAAMU,gBACXC,MAAOX,EAAMU,kBAKfH,EAAIK,iBAAyBxB,OAAAA,GAI7Ba,EAAKY,OAAON,GACZ/B,EAAeqC,OAAOZ,KAMXa,SAAAA,IA4BN,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OA5BT,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE2BC,OAF3B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE2BA,MAAM5B,GAFjC,KAAA,EAGuB6B,OADbA,EAFV,EAAA,KAAA,EAAA,KAAA,EAGuBA,EAASC,OAHhC,KAAA,EAGUC,EAHV,EAAA,KAKItC,EAAcsC,EAAKC,QAEnBtB,IAPJ,EAAA,KAAA,GAAA,MAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GASIuB,MAAA,GAAA,OAAA,EAAA,KATJ,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,UA4BS,MAAA,KAAA,WAbTC,OAAOT,iBAA2B,SAAA,WAE9BS,OAAOC,YAAcD,OAAOE,SAAW9C,SAAS+C,KAAKC,aAAe,KACpE5C,IAEAA,GAAQ,EACRQ,QAAQC,IAAR,aACAwB,OAMJA","file":"infinite-scroll-gallery-script.65d06fa9.js","sourceRoot":"..","sourcesContent":["//! hiding API KEYS\n\nconst apiKey = config.MY_API_TOKEN;\n\n//? DISPLAYING RESULtS\n\nconst imageContainer = document.getElementById(`image-container`);\nconst loader = document.getElementById(`loader`);\n\nlet photosArray = [];\nlet ready = false;\nlet imagesLoaded = 0;\nlet totalImages = 0;\n\n//? API PARAMETERS\n\nconst query = `crypto`;\nconst order_by = `latest`;\nconst per_page = `30`;\n\n//? API STRING\nconst apiURL = `https://api.unsplash.com/search/photos/?client_id=${apiKey}&query=${query}&per_page=${per_page}&order_by=${order_by}`;\n\n//* CREATE ELEMENTS FOR LINKS & PHOTOS, ADD TO DOM\n\n//* check if all images were loaded\n\nfunction imageLoader() {\n  imagesLoaded++;\n  console.log(imagesLoaded);\n\n  if (imagesLoaded === totalImages) {\n    ready = true;\n    loader.hidden = true;\n    console.log(`ready =`, ready);\n  }\n}\n\n//* Helper function to set attributes on DOM elements\n\nfunction setAttributes(element, attributes) {\n  for (const nameOfAtr in attributes) {\n    element.setAttribute(nameOfAtr, attributes[nameOfAtr]);\n\n    // for (const [name, value] of Object.entries(attributes)) {\n    //   element.setAttribute(name, value);\n    // }\n  }\n}\n\nfunction displayPhotos() {\n  imagesLoaded = 0;\n  console.log(`in the displayPhots function`, imagesLoaded);\n\n  totalImages = photosArray.length;\n  console.log(`total images`, totalImages);\n\n  //? RUN FUNCTION FOR EACH OBJECT IN PHOTO-ARRAY\n\n  photosArray.forEach((photo) => {\n    //? creating a direct link to JPEG of photo\n\n    const item = document.createElement(`a`);\n\n    setAttributes(item, {\n      href: photo.urls.regular,\n      target: \"_blank\",\n    });\n\n    //? create <img> for photo\n\n    const img = document.createElement(\"img\");\n\n    setAttributes(img, {\n      src: photo.urls.regular,\n      alt: photo.alt_description,\n      title: photo.alt_description,\n    });\n\n    //? event listener check when each is finished loading\n\n    img.addEventListener(`load`, imageLoader);\n\n    //* put <img> inside <a>, then put both inside .image-container</a>\n\n    item.append(img);\n    imageContainer.append(item);\n  });\n}\n\n//? API CALL\n\nasync function getPhotos() {\n  try {\n    const response = await fetch(apiURL);\n    const data = await response.json();\n\n    photosArray = data.results;\n\n    displayPhotos();\n  } catch (error) {\n    alert(`${error}`);\n  }\n}\n\n//? check to see if scrolling near bottom of page, load more photos\n\nwindow.addEventListener(`scroll`, () => {\n  if (\n    window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 &&\n    ready\n  ) {\n    ready = false;\n    console.log(`load more`);\n    getPhotos();\n  }\n});\n\n//? API LOAD\n\ngetPhotos();\n"]}
{"version":3,"sources":["picture-in-picture/picture-in-picture-script.js"],"names":["video","document","getElementById","pipBtn","viewScreenBtn","webCamBtn","selectMediaStream","navigator","mediaDevices","getDisplayMedia","mediaStream","srcObject","onloadedmetadata","play","addEventListener","disabled","alert","requestPictureInPicture","constraints","audio","hasGetUserMedia","getUserMedia","webCamApiCall"],"mappings":";AAqEA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MArEA,IAAMA,EAAQC,SAASC,eAAvB,SACMC,EAASF,SAASC,eAAxB,8BACME,EAAgBH,SAASC,eAA/B,eACMG,EAAYJ,SAASC,eAA3B,+BAIeI,SAAAA,IA8Df,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OA9DA,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE8BC,OAF9B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE8BA,UAAUC,aAAaC,kBAFrD,KAAA,EAEUC,EAFV,EAAA,KAGIV,EAAMW,UAAYD,EAClBV,EAAMY,iBAAmB,WACvBZ,EAAMa,QALZ,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SA8DA,MAAA,KAAA,WAlDAV,EAAOW,iBAA0B,QAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAIvBR,OAJuB,EAAA,KAAA,EAAA,EAAA,KAAA,EAIvBA,IAJuB,KAAA,EAM7BH,EAAOY,UAAW,EAIlBZ,EAAOY,UAAW,EAVW,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAY7BC,MAAA,oBAAA,EAAA,IAZ6B,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SAiBjCZ,EAAcU,iBAA0B,QAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE9Bd,OAF8B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE9BA,EAAMiB,0BAFwB,KAAA,EAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAIpCD,MAAA,oEAAA,EAAA,IAJoC,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SAaxC,IAAME,EAAc,CAClBlB,OAAO,EACPmB,OAAO,GAIT,SAASC,IACAb,OAAAA,UAAUC,cAAgBD,UAAUC,aAAaa,aAa3CC,SAAAA,IAAf,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EAAA,mBAAA,KAAA,SAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE4Bf,OAF5B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE4BA,UAAUC,aAAaa,aAAaH,GAFhE,KAAA,EAEIlB,EAAMW,UAFV,EAAA,KAGIX,EAAMa,OAENb,EAAMc,iBAAiB,iBAAkB,EAAA,mBAAA,KAAA,SAAA,IAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAE/Bd,OAF+B,EAAA,KAAA,EAAA,EAAA,KAAA,EAE/BA,EAAMiB,0BAFyB,KAAA,EAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SAL7C,EAAA,KAAA,GAAA,MAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,MAAA,GAAA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA,EAAA,SAAA,MAAA,KAAA,WAVAZ,EAAUS,iBAA0B,QAAA,WAClCM,IAEIA,IACFE,IAEAN,MAAM","file":"picture-in-picture-script.1e9c7437.js","sourceRoot":"..","sourcesContent":["const video = document.getElementById(`video`);\nconst pipBtn = document.getElementById(`select-share-screen-button`);\nconst viewScreenBtn = document.getElementById(`view-screen`);\nconst webCamBtn = document.getElementById(`select-webcam-screen-button`);\n\n//promt user to select media stream, pass to video element, then play\n\nasync function selectMediaStream() {\n  try {\n    const mediaStream = await navigator.mediaDevices.getDisplayMedia();\n    video.srcObject = mediaStream;\n    video.onloadedmetadata = () => {\n      video.play();\n    };\n  } catch (e) {\n    // alert(`We have an error:`, e);\n  }\n}\n\npipBtn.addEventListener(`click`, async () => {\n  try {\n    //? Disable button when we click on it\n\n    await selectMediaStream();\n\n    pipBtn.disabled = true;\n\n    //? button reset\n\n    pipBtn.disabled = false;\n  } catch (e) {\n    alert(`We have an error:`, e);\n  }\n});\n\n//? start picture in picture after screen has been selected\nviewScreenBtn.addEventListener(`click`, async () => {\n  try {\n    await video.requestPictureInPicture();\n  } catch (e) {\n    alert(\n      `Please select screen first by clicking the \"select screen\" button`,\n      e\n    );\n  }\n});\n\n//? webcam api\n\nconst constraints = {\n  video: true,\n  audio: true,\n};\n\n//? check if browser supports webcam share\nfunction hasGetUserMedia() {\n  return navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n}\n\nwebCamBtn.addEventListener(`click`, function () {\n  hasGetUserMedia();\n\n  if (hasGetUserMedia()) {\n    webCamApiCall();\n  } else {\n    alert(\"getUserMedia() is not supported by your browser\");\n  }\n});\n\nasync function webCamApiCall() {\n  try {\n    video.srcObject = await navigator.mediaDevices.getUserMedia(constraints);\n    video.play();\n\n    video.addEventListener(\"loadedmetadata\", async () => {\n      try {\n        await video.requestPictureInPicture();\n      } catch (error) {\n        // alert(`video load`, error);\n      }\n    });\n  } catch (e) {\n    // alert(`try again`, e);\n  }\n}\n"]}